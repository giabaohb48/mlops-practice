name: Build and Push Image
on:
  push:
    branches: [ master ]
jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Automatic Tagging of Releases
      id: increment-git-tag
      run: |
        bash ./build/git_update.sh -v minor

    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: mlops-practice
        IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  deploy-container:
    name: Deploy container on EC2
    runs-on: [self-hosted, ubuntu-latest]
    - name: Install AWS CLI
      run: |
        sudo apt-get install awscli

    - name: Provision EC2 instance
      run: |

        # Launch EC2 instance with userdata
        INSTANCE_ID=$(aws ec2 run-instances \
          --image-id ami-12345678 \
          --instance-type t2.micro \
          --key-name my-key-pair \
          --security-group-ids sg-12345678 \
          --subnet-id subnet-12345678 \
          --user-data file://build/userdata.sh \
          --output text --query 'Instances[0].InstanceId')
        
        echo "EC2 instance ID: $INSTANCE_ID"