name: Build and Push Image
on:
  push:
    branches: [ master ]
jobs:
  build-and-push:
    name: Build and push image to Dockerhub
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1

    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Automatic Tagging of Releases
      id: increment-git-tag
      run: |
        bash ./build/git_update.sh -v patch

    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image
      env:
        DOCKER_REGISTRY: giabaohb48
        DOCKER_REPOSITORY: mlops-practice
        # IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |
        docker build -t $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG .
        docker push $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG

  deploy-container:
    name: Deploy container on EC2
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1

    - name: Provision EC2 instance
      run: |
        # Launch EC2 instance with userdata
        INSTANCE_ID=$(aws ec2 run-instances \
          --region us-east-1 \
          --image-id ami-06b09bfacae1453cb \
          --instance-type t2.micro \
          --key-name key \
          --security-group-ids sg-08ab097077fc377d9 \
          --user-data file://build/userdata.sh \
          --output text --query 'Instances[0].InstanceId')
        
        echo "EC2 instance ID: $INSTANCE_ID"